--IN THIS PART OF THE SCRIPT WE EXPLORE THE COST OF CARE-- 


  -- WHAT IS THE TOTAL CLAIM COST FOR EACH ENCOUNTER IN 2019? WHAT WAS THE BILL?

SELECT * FROM HEALTHCARE.ENCOUNTERS
WHERE START >= '2019-01-01' AND
	START < '2020-01=01'
    
SELECT SUM(TOTAL_CLAIM_COST) TOTAL_2019, AVG(TOTAL_CLAIM_COST) AVERAGE_2019
FROM HEALTHCARE.ENCOUNTERS
WHERE START >= '2019-01-01' AND
	START < '2020-01-01'

--  WHAT IS THE TOTAL PAYER COVERAGE FOR EACH ENCOUNTER IN 2019? WHAT DID INSURANCE COVER?

SELECT ROUND(SUM(TOTAL_CLAIM_COST), 2) TOTAL_CLAIM_COST_2019, ROUND(AVG(TOTAL_CLAIM_COST),2) AVERAGE_CLAIM_COST_2019, 
ROUND(SUM(PAYER_COVERAGE),2) TOTAL_PAYER_COVERAGE_2019, ROUND(AVG(PAYER_COVERAGE),2) AVG_PAYER_COVERAGE_2019
FROM HEALTHCARE.ENCOUNTERS
WHERE START >= '2019-01-01' AND
	START < '2020-01-01'


-- WHICH ENCOUNTER TYPES HAD THE HIGEST COST COVERED BY PAYERS? WHICH ENCOUNTER TYPES HAD THE HIGHEST COST?

SELECT PAYER, NAME, ENCOUNTERCLASS,
-- ROUND(SUM(TOTAL_CLAIM_COST), 2) TOTAL_CLAIM_COST_2019, ROUND(AVG(TOTAL_CLAIM_COST),2) AVERAGE_CLAIM_COST_2019
-- ROUND(SUM(PAYER_COVERAGE),2) TOTAL_PAYER_COVERAGE_2019, ROUND(AVG(PAYER_COVERAGE),2) AVG_PAYER_COVERAGE_2019
ROUND(SUM(TOTAL_CLAIM_COST), 2) - ROUND(SUM(PAYER_COVERAGE),2) DIFFER_IN_CLAIM_TO_PAYER_TOT,
ROUND(AVG(TOTAL_CLAIM_COST), 2) - ROUND(AVG(PAYER_COVERAGE),2) DIFFER_IN_CLAIM_TO_PAYER_AVG
FROM HEALTHCARE.ENCOUNTERS ENC
JOIN HEALTHCARE.PAYERS PAY
ON ENC.PAYER = PAY.ID
WHERE START >= '2019-01-01' AND
	START < '2020-01-01'
    GROUP BY PAYER, NAME, ENCOUNTERCLASS
    ORDER BY ENCOUNTERCLASS


-- WHICH ENCOUNTER TYPES HAD THE HIGHEST COST?


SELECT ENCOUNTERCLASS,
-- ROUND(SUM(TOTAL_CLAIM_COST), 2) TOTAL_CLAIM_COST_2019, ROUND(AVG(TOTAL_CLAIM_COST),2) AVERAGE_CLAIM_COST_2019
-- ROUND(SUM(PAYER_COVERAGE),2) TOTAL_PAYER_COVERAGE_2019, ROUND(AVG(PAYER_COVERAGE),2) AVG_PAYER_COVERAGE_2019
ROUND(SUM(TOTAL_CLAIM_COST), 2) - ROUND(SUM(PAYER_COVERAGE),2) DIFFER_IN_CLAIM_TO_PAYER_TOT,
ROUND(AVG(TOTAL_CLAIM_COST), 2) - ROUND(AVG(PAYER_COVERAGE),2) DIFFER_IN_CLAIM_TO_PAYER_AVG
FROM HEALTHCARE.ENCOUNTERS ENC
WHERE START >= '2019-01-01' AND
	START < '2020-01-01'
    GROUP BY ENCOUNTERCLASS
    ORDER BY ENCOUNTERCLASS
    

-- What was the total claim cost for encounters before 2020? Return answer in whole dollars (round up to nearest dollar).

SELECT ROUND(SUM(TOTAL_CLAIM_COST),0) AS TOTAL_BEFORE_2020
FROM HEALTHCARE.ENCOUNTERS
WHERE START < '2020-01-01'
-- ANSWER: 6,744,552
-- Q2: What was the total payer coverage for encounters before 2020? Return answer in whole dollars (round up to nearest dollar).
SELECT ROUND(SUM(PAYER_COVERAGE),0) AS TOTAL_BEFORE_2020
FROM HEALTHCARE.ENCOUNTERS
WHERE START < '2020-01-01'
-- ANSWER: 3,245,263

-- Which payer had the highest claim coverage percentage (total payer coverage/ total claim cost) for encounters before 2020?

SELECT PAY.NAME, SUM(PAYER_COVERAGE)/SUM(TOTAL_CLAIM_COST)*100 AS TOTAL_CLAIM_COV_PERCENT
FROM HEALTHCARE.ENCOUNTERS ENC
JOIN HEALTHCARE.PAYERS PAY
ON ENC.PAYER = PAY.ID
WHERE START < '2020-01-01'
GROUP BY PAY.NAME
ORDER BY TOTAL_CLAIM_COV_PERCENT

-- ANSWER: ANTHEM

-- Q4: Which payer had the highest claim coverage percentage (total payer coverage / total claim cost) for ambulatory encounters before 2020?

SELECT PAY.NAME, SUM(PAYER_COVERAGE)/SUM(TOTAL_CLAIM_COST)*100 AS TOTAL_CLAIM_COV_PERCENT
FROM HEALTHCARE.ENCOUNTERS ENC
JOIN HEALTHCARE.PAYERS PAY
ON ENC.PAYER = PAY.ID
WHERE START < '2020-01-01'
AND ENCOUNTERCLASS = 'AMBULATORY'
GROUP BY PAY.NAME
ORDER BY TOTAL_CLAIM_COV_PERCENT

-- ANSWER: MEDICARE




--HERE WE EXPLORE THE TYPES, QUANTITIES, AND DEMOGRAPHICS OF PROCEDURES PERFORMED OVER THE YEARS--





  -- HOW MANY DIFFERENT TYPES OF PROCEDURES DID WE PERFORM IN 2019?

SELECT DESCRIPTION, COUNT(*) TOTAL_PROC
FROM HEALTHCARE.PROCEDURES
WHERE DATE >= '2019-01-01'
AND DATE < '2020-01-01'
GROUP BY DESCRIPTION
ORDER BY TOTAL_PROC DESC


-- ANSWER: 100

-- HOW MANY PROCEDURES WERE PERFORMED ACROSS EACH CARE SETTING(INPATIENT/AMBULTORY)?

SELECT ENC.ENCOUNTERCLASS, COUNT(PROC.DESCRIPTION) AS PROC_TOTAL
FROM HEALTHCARE.PROCEDURES PROC
JOIN HEALTHCARE.ENCOUNTERS  ENC
ON  PROC.ENCOUNTER = ENC.ID
GROUP BY ENC.ENCOUNTERCLASS
 

-- WHICH ORGANIZATIONS PERFORMED THE MOST INPATIENT PROCEDURES IN 2019?
SELECT ORG.NAME, COUNT(PROC.DESCRIPTION) AS PROC_COUNT
FROM HEALTHCARE.PROCEDURES PROC
JOIN HEALTHCARE.ENCOUNTERS  ENC
ON  PROC.ENCOUNTER = ENC.ID
JOIN HEALTHCARE.ORGANIZATIONS ORG 
ON ENC.ORGANIZATION = ORG.ID
WHERE DATE >= '2019-01-01'
AND DATE < '2020-01-01'
AND ENC.ENCOUNTERCLASS = 'INPATIENT'
GROUP BY ORG.NAME
ORDER BY PROC_COUNT DESC

  

-- How many Colonoscopy procedures were performed before 2020?

SELECT COUNT(*)
FROM HEALTHCARE.PROCEDURES
WHERE DATE < '2020-01-01'
AND DESCRIPTION = 'COLONOSCOPY'

-- ANSWER: 510

-- Did we perform more procedures in 2019 or less?

SELECT COUNT(*)
FROM HEALTHCARE.PROCEDURES
-- WHERE DATE >= '2019-01-01'
-- AND DATE < '2020-01-01'
WHERE DATE >= '2018-01-01'
AND DATE < '2019-01-01'

-- ANSWER: 2019 HAD 2550 PROCEDURES WHILE 2018 HAD 2763 PROCEDURES. 2019 HAS LESS. 


-- Which organizations performed the most Auscultation of the fetal heart procedures before 2020? Give answer with Organization ID.

SELECT ORG.ID, PROC.DESCRIPTION, COUNT(*) AS TOTAL_PROC
FROM HEALTHCARE.PROCEDURES PROC
JOIN HEALTHCARE.ENCOUNTERS ENC
ON PROC.ENCOUNTER = ENC.ID
JOIN HEALTHCARE.ORGANIZATIONS ORG
ON ORG.ID = ENC.ORGANIZATION
WHERE PROC.DATE < '2020-01-01' AND
PROC.DESCRIPTION = 'Auscultation of the fetal heart'
GROUP BY ORG.ID
ORDER BY TOTAL_PROC DESC
 
-- ANSWER: d692e283-0833-3201-8e55-4f868a9c0736

-- Which race had the highest number of procedures done in 2019?

SELECT PAT.RACE, COUNT(*) AS TOTAL_PROC
FROM HEALTHCARE.PROCEDURES PROC
JOIN HEALTHCARE.PATIENTS PAT
ON PROC.PATIENT = PAT.ID
WHERE DATE >= '2019-01-01'
AND DATE < '2020-01-01'
GROUP BY PAT.RACE

-- ANSWSER: WHITE

-- Which race had the highest number of Colonoscopy procedures performed before 2020?

SELECT PAT.RACE, COUNT(*) AS TOTAL_PROC
FROM HEALTHCARE.PROCEDURES PROC
JOIN HEALTHCARE.PATIENTS PAT
ON PROC.PATIENT = PAT.ID
WHERE DATE >= '2019-01-01'
AND DATE < '2020-01-01'
AND PROC.DESCRIPTION = 'COLONOSCOPY'
GROUP BY PAT.RACE

-- ANSWER: WHTIE
