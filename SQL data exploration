SELECT * FROM COVID_DEATHS
WHERE continent IS NOT NULL
ORDER BY 3,4;

--Selecting data

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM covid_deaths
ORDER BY 1,2;

--looking at total cases vs total deaths by percentage

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as death_percentage
FROM covid_deaths
WHERE location LIKE '%States%' AND continent IS NOT NULL
ORDER BY 1,2;

--Total Cases vs Population
--Demonstrates the percentage of the population that has contracted covid over pandemic
SELECT location, date, total_cases, population, (total_cases/population)*100 as population_contraction_rate
FROM covid_deaths
WHERE location LIKE '%States%'
ORDER BY 1,2 desc;

-- Countries with highest infection rates

SELECT location, MAX(total_cases) as highest_infection_count, population, Max((total_cases/population))*100 as percent_population_infected
FROM covid_deaths
-- WHERE location LIKE '%States%'
GROUP BY location, population
ORDER BY percent_population_infected desc;	

-- Countries with highest death count per population

SELECT location, MAX(total_deaths) AS total_death_count
FROM covid_deaths
WHERE total_deaths IS NOT NULL AND continent IS NOT NULL
GROUP BY location
ORDER BY total_death_count desc;

-- Break up by continent. Ones with highest death count

SELECT continent, MAX(total_deaths) AS total_death_count
FROM covid_deaths
WHERE total_deaths IS NOT NULL AND continent IS NOT NULL
GROUP BY continent
ORDER BY total_death_count desc;

-- Global Numbers Explored

SELECT date, SUM(new_cases) as total_cases, SUM(new_deaths) as total_deaths, SUM(new_deaths)/SUM(new_cases)*100 AS death_percentage
FROM covid_deaths
WHERE continent IS NOT NULL AND new_cases IS NOT NULL
GROUP BY date
ORDER BY 1,2;

--Global death_percentage
SELECT SUM(new_cases) as total_cases, SUM(new_deaths) as total_deaths, SUM(new_deaths)/SUM(new_cases)*100 AS death_percentage
FROM covid_deaths
WHERE continent IS NOT NULL AND new_cases IS NOT NULL
--GROUP BY date
ORDER BY 1,2;

-- Looking at vaccinations now

SELECT * FROM covid_vaccinations

-- Joining the tables
-- Also looking at total population vs vaccination

SELECT dea.continent, dea.location, dea.population, dea.date, vac.new_vaccinations
, SUM (vac.new_vaccinations) OVER (Partition by dea.location ORDER BY dea.location, dea.date) as rolling_vaccinations
-- , (rolling_vaccinations/population)*100
FROM covid_deaths as dea
JOIN public.covid_vaccinations as vac
	ON dea.location = vac.location
	AND	dea.date = vac.date
WHERE dea.continent IS NOT NULL AND dea.location = 'Albania' or dea.location= 'Afghanistan'
ORDER BY 2,3;

-- Using a CTE 

WITH pop_vs_vac (date, continent, location, population, new_vaccinations, rolling_vaccinations)
as
(
SELECT dea.continent, dea.location, cast(dea.population as numeric), dea.date, vac.new_vaccinations
, SUM (vac.new_vaccinations) OVER (Partition by dea.location ORDER BY dea.location, dea.date) as rolling_vaccinations
-- , (rolling_vaccinations/population)*100
FROM covid_deaths as dea
JOIN public.covid_vaccinations as vac
	ON dea.location = vac.location
	AND	dea.date = vac.date
WHERE dea.continent IS NOT NULL AND dea.location = 'Albania' or dea.location= 'Afghanistan'
)

SELECT*, (rolling_vaccinations/population)*100
FROM pop_vs_vac


